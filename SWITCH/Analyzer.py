#determine if the systems needs adaption. Checks if the parameters/ thresholds
#are been crosed ...........
from Planner_ada import Planner
import pandas as pd
import time
import numpy as np
import os
# from Custom_Logger import logger


    
class Analyzer():
    def __init__(self):
        
        self.time = -1
        self.count = 0


    def perform_analysis(self,monitor_dict):
        model = monitor_dict["model"] 
        image_process_time = monitor_dict["image_processing_time"] 
        confidence = monitor_dict["confidence"] 
        utility = monitor_dict["utility"]

        # change the system objective?
        # remove MAPE?
        # change set_dimmer to increase_dimmer and decrease_dimmer?


        # multiple objectives of the system
        objective='''Here the system objective is to keep the average response time as low as possible.'''
        objective1='''Here the system objective is a combination of keeping the average response time as low as possible, keeping the content the user receives as high quality as possible, and keeping the cost of running the system as low as possible.'''
        objective2='''Here the system objective is a combination of keeping the average response time as low as possible, keeping the content the user receives as high quality as possible, and keeping the utilization of the servers as high as possible.'''
        objective3='''Here the system objective is a combination of keeping the average response time as low as possible and keeping the content the user receives as high quality as possible.'''
        objective4='''Here the system objective is a combination of keeping the average response time as low as possible and keeping the cost of running the system as low as possible.'''
        objective5='''Here the system objective is a combination of keeping the content the user receives as high quality as possible and keeping the cost of running the system as low as possible.'''
        objective6='''Here the system objective is to keep the revenue generated by the system as high as possible. Revenue can increase if dimmer value is high since user experience increases. Revenue can increase if average response time is low and if less servers are used.'''


        instruction=f'You are an adpatation manager for a server system handling user requests. Self-adaptive systems are capable of modifying their runtime behavior in order to achieve system objectives. {objective6} You being the adapatation manager are responsible for modifying the runtime behavior of the system using the MAPE (Monitor-Analyze-Plan-Execute) model. You will be provided data on the status of the system and you need to analyze to decide if adaption is required and what type of adaptation is needed. The possible actions you can take to modify the system are adding a server, removing a server and changing the dimmer value.'

        few_shot=['''Terminology: 
        dimmer - used to control the proportion of responses that include the optional content, with 1 being the setting in which all responses include the optional content, 0 when no one does (i.e., blackout). The value of the dimmer can be thought of as the probability of a response including the optional content, thus taking values in [0..1].
        active_servers - the number of servers that are currently active and processing requests
        max_servers - the maximum number of servers that can be active at any time
        utilization - the proportion of time that all servers are busy processing requests
        average_response_time - the average time taken to process a request
        arrival_rate - the average number of requests arriving per second
        time - the seconds elapsed since the start of the system

                            
        Here are a few examples on how you are to interact with the system. Respond with the action number. If the action has a parameter like set dimmer respond with action number followed by the dimmer value.


        Status:
        dimmer: 0.9
        active_servers: 2
        max_servers: 3
        utilization: 0.0611121
        average_response_time: 0.07638993128912003
        arrival_rate: 11.3332
        time: 0

        Actions you can take:
        1. Set dimmer
        2. Add server
        3. Remove server
        4. Do nothing

        Answer:''', 
        '''2''',

        '''Status:
        dimmer: 0.9
        active servers: 3
        max servers: 3
        utilization: 0.779628
        average response time: 0.07346221086027917
        arrival rate: 10.6167
        time: 200

        Actions you can take:
        1. Set dimmer
        2. Add server
        3. Remove server
        4. Do nothing

        Answer:''', 
        '''1 0.5''',

        '''Status:
        dimmer: 0.5
        active servers: 3
        max servers: 3
        utilization: 0.517234
        average response time: 0.05673555607704635
        arrival rate: 9.1
        time: 400

        Actions you can take:
        1. Set dimmer
        2. Add server
        3. Remove server
        4. Do nothing

        Answer:''', 
        '''1 0.2''',

        '''Status:
        dimmer: 0.2
        active servers: 3
        max servers: 3
        utilization: 0.39712899999999995
        average response time: 0.040725613054705435
        arrival rate: 9.76667
        time: 600

        Actions you can take:
        1. Set dimmer
        2. Add server
        3. Remove server
        4. Do nothing

        Answer:''', 
        '''4''']

        closing='''Actions you can take:
        1. Set dimmer
        2. Add server
        3. Remove server
        4. Do nothing

        Answer:'''

        planner_obj = Planner(monitor_dict)
        planner_obj.generate_adaptation_plan(closing, instruction, few_shot)
